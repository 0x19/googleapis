// Image context that can be used for the search intent.

syntax = "proto3";

package google.cloud.vision.v1;

import "google/api/annotations.proto";
import "google/cloud/vision/v1/geometry.proto";
import "google/protobuf/timestamp.proto";
import "google/type/latlng.proto";

option java_multiple_files = true;
option java_package = "com.google.cloud.vision.v1";
option java_outer_classname = "ImageContextSearchExtensionProto";
option cc_enable_arenas = true;


// Photo related context such as location or device context.
// Next available ID: 11.
message ImageContextSearchExtension {
  // Required. A request will fail if this field is not set.
  // A unique ID for identifying every client request and the corresponding
  // server response (request_id field in QueryAnnotation). It should be 128
  // bits (from a good source of randomness) encoded with web-safe Base64 and no
  // padding. This would be equivalent to golang's base64.RawURLEncoding.
  // Example: "TEVUU0hBVkVET0NVTUVOVA".
  string request_id = 7;

  // Required. A request will fail if this field is not set.
  // A unique session token to group a series of requests. It should be 128 bits
  // (from a good source of randomness) encoded with web-safe Base64 and no
  // padding. This would be equivalent to golang's base64.RawURLEncoding.
  // Example: "SEVMTE9USElTSVNSQU5ETw".
  string session_id = 4;

  // Temporary field to preserve backward compatibility until transition to
  // session_id is complete.
  string session_token = 10;

  // Location context of the photo.
  LocationContext location_context = 1;

  // Points of interest in the image measured in pixels, with the top left
  // corner of the image being (0, 0).
  repeated Vertex interest_points = 2;

  // Time when the photo is taken.
  google.protobuf.Timestamp create_time = 3;

  // Information about the device that made the photo.
  DeviceContext device_context = 5;

  // Information about the client that is making the request.
  ClientContext client_context = 6;

  // A list of experiments enabled for this request.
  repeated string experiments = 8;

  // Analytics data (user actions) collected for the previous request.
  // We piggyback the current request with analytics data collected for the
  // previous request.
  Analytics analytics_data = 9;
};

// Location context.
// Next available ID: 5.
message LocationContext {
  // Where the photo was taken.
  google.type.LatLng lat_lng  = 1;

  // The accuracy of the location in meters.
  float accuracy_meters = 2;

  // The altitude of the location in meters.
  float altitude_meters = 4;

  // Time when the location information is recorded.
  google.protobuf.Timestamp create_time = 3;
};

// Context of a device.
// Next available ID: 6.
message DeviceContext {
  // E.g., "Android".
  string platform_name = 1;

  // E.g., "4.0.3 Ice Cream Sandwich".
  string platform_version = 2;

  // E.g., "Samsung Galaxy Nexus".
  string device_model = 3;

  // Camera position: front or rear facing.
  bool is_front_facing = 4;

  // Whether the camera is in night mode.
  bool is_night_mode = 5;
};

// Context of a client.
message ClientContext {
  // E.g., "Google Camera".
  string app_name = 1;

  // E.g., "3.0.2".
  string app_version = 2;
};

// Analytics data (user actions) collected for the previous request.
// We piggyback the current request with the analytics data collected for the
// previous request.
// Next available ID: 10.
message Analytics {
  // A list of events.
  repeated Event events = 1;

  // The modified query string.
  string modified_query = 2;

  // Index of the query suggestion which was tapped by the user.
  int32 other_query_tapped_index = 3;

  // Number of live sessions viewed by the user.
  int32 live_story_session_views = 4;

  // Number of total viewable live sessions.
  int32 live_story_session_total_viewable = 5;

  // URLs viewed in the snapchat webview.
  repeated string web_view_pages_viewed = 6;

  // Number of recipients of search card instant share.
  int32 search_card_instant_share_num_recipients = 7;

  // Number of recipients of full web view share.
  int32 full_web_view_share_num_recipients = 8;

  // Number of recipients of original image share.
  int32 original_image_share_num_recipients = 9;
};

// User specific event.
message Event {
  // Next available ID: 21.
  enum EventId {
    // UNKNOWN
    UNKNOWN = 0;
    // Session started.
    SESSION_STARTED = 1;
    // Session completed.
    SESSION_COMPLETED = 2;
    // User image (client request) sent to google.
    CLIENT_IMAGE_SENT = 3;
    // Query loaded.
    QUERY_LOADED = 4;
    // Search card load started.
    SEARCH_CARD_LOAD_STARTED = 5;
    // Search card load completed.
    SEARCH_CARD_LOAD_COMPLETED = 6;
    // Search card tapped to full view.
    SEARCH_CARD_TAPPED_TO_FULL_VIEW = 7;
    // Search card instant share started.
    SEARCH_CARD_INSTANT_SHARE_STARTED = 8;
    // Search card instant share completed.
    SEARCH_CARD_INSTANT_SHARE_COMPLETED = 9;
    // Other query tapped.
    OTHER_QUERY_TAPPED = 10;
    // Query modified.
    QUERY_MODIFIED = 11;
    // Original image tapped.
    ORIGINAL_IMAGE_TAPPED = 12;
    // Original image share started.
    ORIGINAL_IMAGE_SHARE_STARTED = 13;
    // Original image share completed.
    ORIGINAL_IMAGE_SHARE_COMPLETED = 14;
    // Live story card started.
    LIVE_STORY_CARD_STARTED = 15;
    // Live story card completed.
    LIVE_STORY_CARD_COMPLETED = 16;
    // Full web view loaded.
    FULL_WEB_VIEW_LOADED = 17;
    // Full web view session completed.
    FULL_WEB_VIEW_SESSION_COMPLETED = 18;
    // Full web view share started.
    FULL_WEB_VIEW_SHARE_STARTED = 19;
    // Full web view share completed.
    FULL_WEB_VIEW_SHARE_COMPLETED = 20;
  };

  // Event ID.
  EventId event_id = 1;

  // Time at which the event occurred.
  google.protobuf.Timestamp event_time = 2;
};